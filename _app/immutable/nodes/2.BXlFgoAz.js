import{t as $,a as S}from"../chunks/Bd0yObkR.js";import{i as P,j as l,k as X,t as N,l as Y,m as c,n as e,o as n,q as o,u as m,v as B}from"../chunks/BVfEjWgp.js";import{s as d}from"../chunks/isRUiBKv.js";import{i as G}from"../chunks/B7LBtJVs.js";import{o as H}from"../chunks/BNM25E4z.js";var J=$('<div class="message"> </div>'),K=$('<main class="svelte-ftfmaa"><h2> </h2> <div class="north"><h2 class="northX"> </h2> <div class="northY"> </div></div> <h2 class="speedometer"> <sub>mph</sub></h2> <!></main>');function te(A,F){P(F,!0);let u=l(null),s=l(null),L="Compass",v=l(""),M=l(0),p=l(""),y=l(0),T=X({frequency:1,referenceFrame:"device"});function b(a,t=0){return Math.round(a*Math.pow(10,t))/Math.pow(10,t)}function W(a){const[t,r,i,w]=a;let E=360-(Math.atan2(2*(w*i+t*r),1-2*(r*r+i*i))*(180/Math.PI)+360)%360;return c(M,b(E),!0),k(E)}function k(a){const t=["N","NE","E","SE","S","SW","W","NW","N"],r=Math.round(a/45)%8;return t[r]}H(()=>{if("AbsoluteOrientationSensor"in window){c(u,new AbsoluteOrientationSensor(T),!0),e(u).addEventListener("reading",()=>{const r=e(u).quaternion;r&&(c(p,W(r),!0),console.log(`Facing: ${e(p)}`))}),e(u).addEventListener("error",r=>{console.error("Sensor error:",r.error)}),e(u).start(),c(s,new Accelerometer({frequency:10}),!0);let a=0,t=null;e(s).addEventListener("reading",()=>{let r=Math.sqrt(e(s).x**2+e(s).y**2+e(s).z**2),i=performance.now();if(t!==null){let w=(i-t)/1e3;a+=r*w}t=i,c(y,b(a*2.23694),!0)}),e(s).start()}else c(v,"sensor not supported")});var h=K(),f=n(h),z=n(f);o(f);var g=m(f,2),_=n(g),C=n(_,!0);o(_);var q=m(_,2),D=n(q);o(q),o(g);var x=m(g,2),O=n(x);B(),o(x);var j=m(x,2);{var I=a=>{var t=J(),r=n(t,!0);o(t),N(()=>d(r,e(v))),S(a,t)};G(j,a=>{e(v).length>0&&a(I)})}o(h),N(()=>{d(z,`${L}:`),d(C,e(p)),d(D,`${e(M)??""}Â°`),d(O,`${e(y)??""} `)}),S(A,h),Y()}export{te as component};
