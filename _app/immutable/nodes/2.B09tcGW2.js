import{t as C,a as D}from"../chunks/C06YIbpK.js";import{p as L,s as g,a as O,t as z,b as I,c as x,g as s,d as r,r as a,e as u}from"../chunks/fUOi5Kuw.js";import{s as o}from"../chunks/CAI48k2J.js";import{o as P}from"../chunks/g_mddpEM.js";var X=C('<main class="svelte-ftfmaa"><h2> </h2> <div class="north"><h2 class="northX"> </h2> <div class="northY"> </div></div> <div class="message"> </div></main>');function G(_,S){L(S,!0);let w="Compass",E="",i=g(0),c=g(""),b=O({frequency:1,referenceFrame:"screen"});function y(e){const[t,n,p,$]=e,A=Math.atan2(2*($*p+t*n),1-2*(n*n+p*p));return x(i,360-(A*(180/Math.PI)+360)%360),M(s(i))}function M(e){const t=["N","NE","E","SE","S","SW","W","NW","N"],n=Math.round(e/45)%8;return t[n]}P(()=>{if("AbsoluteOrientationSensor"in window){const e=new AbsoluteOrientationSensor(b);e.addEventListener("reading",()=>{const t=e.quaternion;t&&(x(c,y(t),!0),console.log(`Facing: ${s(c)}`))}),e.addEventListener("error",t=>{console.error("Sensor error:",t.error)}),e.start()}});var d=X(),v=r(d),N=r(v);a(v);var l=u(v,2),m=r(l),q=r(m,!0);a(m);var f=u(m,2),F=r(f);a(f),a(l);var h=u(l,2),W=r(h,!0);a(h),a(d),z(()=>{o(N,`${w}:`),o(q,s(c)),o(F,`${s(i)??""}Â°`),o(W,E)}),D(_,d),I()}export{G as component};
