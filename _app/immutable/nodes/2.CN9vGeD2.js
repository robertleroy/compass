import{t as $,a as S}from"../chunks/Bd0yObkR.js";import{i as P,j as c,k as X,t as N,l as Y,m as s,n as a,o as n,q as o,u as m,v as B}from"../chunks/BVfEjWgp.js";import{s as u}from"../chunks/isRUiBKv.js";import{i as G}from"../chunks/B7LBtJVs.js";import{o as H}from"../chunks/BNM25E4z.js";var J=$('<div class="message"> </div>'),K=$('<main class="svelte-1hxcuu"><h2> </h2> <div class="north"><h2 class="northX"> </h2> <div class="northY"> </div></div> <h2 class="speedometer svelte-1hxcuu"> <sub>mph</sub></h2> <!></main>');function ee(A,F){P(F,!0);let i=c(null),L="Compass",d=c(""),w=c(0),p=c(""),M=c(0),T=X({frequency:1,referenceFrame:"device"});function y(e,t=0){return Math.round(e*Math.pow(10,t))/Math.pow(10,t)}function W(e){const[t,r,l,v]=e;let E=360-(Math.atan2(2*(v*l+t*r),1-2*(r*r+l*l))*(180/Math.PI)+360)%360;return s(w,y(E),!0),k(E)}function k(e){const t=["N","NE","E","SE","S","SW","W","NW","N"],r=Math.round(e/45)%8;return t[r]}H(()=>{if("AbsoluteOrientationSensor"in window?(s(i,new AbsoluteOrientationSensor(T),!0),a(i).addEventListener("reading",()=>{const e=a(i).quaternion;e&&(s(p,W(e),!0),console.log(`Facing: ${a(p)}`))}),a(i).addEventListener("error",e=>{console.error("Sensor error:",e.error)}),a(i).start()):s(d,"sensor not supported"),condition){let e=new Accelerometer({frequency:10}),t=0,r=null;e.addEventListener("reading",()=>{let l=Math.sqrt(e.x**2+e.y**2+e.z**2),v=performance.now();if(r!==null){let q=(v-r)/1e3;t=l*q}r=v,s(M,y(t*2.23694),!0)}),e.start()}else s(d,"accelerometer not supported")});var h=K(),f=n(h),z=n(f);o(f);var g=m(f,2),x=n(g),C=n(x,!0);o(x);var b=m(x,2),D=n(b);o(b),o(g);var _=m(g,2),O=n(_);B(),o(_);var j=m(_,2);{var I=e=>{var t=J(),r=n(t,!0);o(t),N(()=>u(r,a(d))),S(e,t)};G(j,e=>{a(d).length>0&&e(I)})}o(h),N(()=>{u(z,`${L}:`),u(C,a(p)),u(D,`${a(w)??""}Â°`),u(O,`${a(M)??""} `)}),S(A,h),Y()}export{ee as component};
